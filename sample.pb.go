// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: sample.proto

package pactissue

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BrokenSampleRequest_Type int32

const (
	BrokenSampleRequest_UNKNOWN BrokenSampleRequest_Type = 0
	BrokenSampleRequest_TYPE1   BrokenSampleRequest_Type = 1
	BrokenSampleRequest_TYPE2   BrokenSampleRequest_Type = 2
)

// Enum value maps for BrokenSampleRequest_Type.
var (
	BrokenSampleRequest_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "TYPE1",
		2: "TYPE2",
	}
	BrokenSampleRequest_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"TYPE1":   1,
		"TYPE2":   2,
	}
)

func (x BrokenSampleRequest_Type) Enum() *BrokenSampleRequest_Type {
	p := new(BrokenSampleRequest_Type)
	*p = x
	return p
}

func (x BrokenSampleRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BrokenSampleRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_sample_proto_enumTypes[0].Descriptor()
}

func (BrokenSampleRequest_Type) Type() protoreflect.EnumType {
	return &file_sample_proto_enumTypes[0]
}

func (x BrokenSampleRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BrokenSampleRequest_Type.Descriptor instead.
func (BrokenSampleRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_sample_proto_rawDescGZIP(), []int{0, 0}
}

type WorkingSampleRequest_Type int32

const (
	WorkingSampleRequest_UNKNOWN WorkingSampleRequest_Type = 0
	WorkingSampleRequest_TYPE1   WorkingSampleRequest_Type = 1
	WorkingSampleRequest_TYPE2   WorkingSampleRequest_Type = 2
)

// Enum value maps for WorkingSampleRequest_Type.
var (
	WorkingSampleRequest_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "TYPE1",
		2: "TYPE2",
	}
	WorkingSampleRequest_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"TYPE1":   1,
		"TYPE2":   2,
	}
)

func (x WorkingSampleRequest_Type) Enum() *WorkingSampleRequest_Type {
	p := new(WorkingSampleRequest_Type)
	*p = x
	return p
}

func (x WorkingSampleRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkingSampleRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_sample_proto_enumTypes[1].Descriptor()
}

func (WorkingSampleRequest_Type) Type() protoreflect.EnumType {
	return &file_sample_proto_enumTypes[1]
}

func (x WorkingSampleRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkingSampleRequest_Type.Descriptor instead.
func (WorkingSampleRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_sample_proto_rawDescGZIP(), []int{2, 0}
}

type BrokenSampleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type []BrokenSampleRequest_Type `protobuf:"varint,1,rep,packed,name=type,proto3,enum=pactissue.BrokenSampleRequest_Type" json:"type,omitempty"`
}

func (x *BrokenSampleRequest) Reset() {
	*x = BrokenSampleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokenSampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokenSampleRequest) ProtoMessage() {}

func (x *BrokenSampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sample_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokenSampleRequest.ProtoReflect.Descriptor instead.
func (*BrokenSampleRequest) Descriptor() ([]byte, []int) {
	return file_sample_proto_rawDescGZIP(), []int{0}
}

func (x *BrokenSampleRequest) GetType() []BrokenSampleRequest_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

type BrokenSampleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *BrokenSampleResponse) Reset() {
	*x = BrokenSampleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokenSampleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokenSampleResponse) ProtoMessage() {}

func (x *BrokenSampleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sample_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokenSampleResponse.ProtoReflect.Descriptor instead.
func (*BrokenSampleResponse) Descriptor() ([]byte, []int) {
	return file_sample_proto_rawDescGZIP(), []int{1}
}

func (x *BrokenSampleResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type WorkingSampleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type WorkingSampleRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=pactissue.WorkingSampleRequest_Type" json:"type,omitempty"`
}

func (x *WorkingSampleRequest) Reset() {
	*x = WorkingSampleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingSampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingSampleRequest) ProtoMessage() {}

func (x *WorkingSampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sample_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingSampleRequest.ProtoReflect.Descriptor instead.
func (*WorkingSampleRequest) Descriptor() ([]byte, []int) {
	return file_sample_proto_rawDescGZIP(), []int{2}
}

func (x *WorkingSampleRequest) GetType() WorkingSampleRequest_Type {
	if x != nil {
		return x.Type
	}
	return WorkingSampleRequest_UNKNOWN
}

type WorkingSampleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *WorkingSampleResponse) Reset() {
	*x = WorkingSampleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sample_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkingSampleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingSampleResponse) ProtoMessage() {}

func (x *WorkingSampleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sample_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingSampleResponse.ProtoReflect.Descriptor instead.
func (*WorkingSampleResponse) Descriptor() ([]byte, []int) {
	return file_sample_proto_rawDescGZIP(), []int{3}
}

func (x *WorkingSampleResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_sample_proto protoreflect.FileDescriptor

var file_sample_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x70, 0x61, 0x63, 0x74, 0x69, 0x73, 0x73, 0x75, 0x65, 0x22, 0x79, 0x0a, 0x13, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x70, 0x61, 0x63, 0x74, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65,
	0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x29, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x54, 0x59, 0x50, 0x45, 0x31, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x59, 0x50,
	0x45, 0x32, 0x10, 0x02, 0x22, 0x26, 0x0a, 0x14, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x7b, 0x0a, 0x14,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x61, 0x63, 0x74, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x29,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x59, 0x50, 0x45, 0x31, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x54, 0x59, 0x50, 0x45, 0x32, 0x10, 0x02, 0x22, 0x27, 0x0a, 0x15, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x32, 0x65, 0x0a, 0x13, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x63, 0x74, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x63, 0x74, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x68, 0x0a, 0x14, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x50, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1f,
	0x2e, 0x70, 0x61, 0x63, 0x74, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x70, 0x61, 0x63, 0x74, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x2d, 0x69, 0x73, 0x2d, 0x68, 0x61, 0x74, 0x65, 0x2f, 0x70,
	0x61, 0x63, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2d,
	0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x3b, 0x70, 0x61, 0x63, 0x74, 0x69, 0x73, 0x73, 0x75, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sample_proto_rawDescOnce sync.Once
	file_sample_proto_rawDescData = file_sample_proto_rawDesc
)

func file_sample_proto_rawDescGZIP() []byte {
	file_sample_proto_rawDescOnce.Do(func() {
		file_sample_proto_rawDescData = protoimpl.X.CompressGZIP(file_sample_proto_rawDescData)
	})
	return file_sample_proto_rawDescData
}

var file_sample_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sample_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sample_proto_goTypes = []interface{}{
	(BrokenSampleRequest_Type)(0),  // 0: pactissue.BrokenSampleRequest.Type
	(WorkingSampleRequest_Type)(0), // 1: pactissue.WorkingSampleRequest.Type
	(*BrokenSampleRequest)(nil),    // 2: pactissue.BrokenSampleRequest
	(*BrokenSampleResponse)(nil),   // 3: pactissue.BrokenSampleResponse
	(*WorkingSampleRequest)(nil),   // 4: pactissue.WorkingSampleRequest
	(*WorkingSampleResponse)(nil),  // 5: pactissue.WorkingSampleResponse
}
var file_sample_proto_depIdxs = []int32{
	0, // 0: pactissue.BrokenSampleRequest.type:type_name -> pactissue.BrokenSampleRequest.Type
	1, // 1: pactissue.WorkingSampleRequest.type:type_name -> pactissue.WorkingSampleRequest.Type
	2, // 2: pactissue.BrokenSampleService.GetSample:input_type -> pactissue.BrokenSampleRequest
	4, // 3: pactissue.WorkingSampleService.GetSample:input_type -> pactissue.WorkingSampleRequest
	3, // 4: pactissue.BrokenSampleService.GetSample:output_type -> pactissue.BrokenSampleResponse
	5, // 5: pactissue.WorkingSampleService.GetSample:output_type -> pactissue.WorkingSampleResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sample_proto_init() }
func file_sample_proto_init() {
	if File_sample_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sample_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokenSampleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokenSampleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingSampleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sample_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkingSampleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sample_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_sample_proto_goTypes,
		DependencyIndexes: file_sample_proto_depIdxs,
		EnumInfos:         file_sample_proto_enumTypes,
		MessageInfos:      file_sample_proto_msgTypes,
	}.Build()
	File_sample_proto = out.File
	file_sample_proto_rawDesc = nil
	file_sample_proto_goTypes = nil
	file_sample_proto_depIdxs = nil
}
